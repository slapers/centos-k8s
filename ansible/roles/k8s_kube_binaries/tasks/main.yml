---

- name: Ensure the download path exists
  file:
    path="{{ k8s_kube_binaries_download_path }}"
    state=directory
    owner=root
    group=root
    mode=0755

- name: Download kubernetes binaries
  get_url:
    url="{{ k8s_kube_binaries_download_url }}/{{ item }}"
    dest="{{ k8s_kube_binaries_download_path }}/{{ item }}"
    mode=755
  with_items: "{{ k8s_kube_binaries }}"

- name: Set appropriate permissions on binaries
  file:
    path="{{ k8s_kube_binaries_download_path }}/{{ item }}"
    owner=root
    group=root
    mode=0755
  with_items: "{{ k8s_kube_binaries }}"

- name: Check capabilities on kube-apiserver
  command:
    getcap "{{ k8s_kube_binaries_download_path }}/kube-apiserver"
  register: kube_apiserver_capabilities

- name: Add capabilities to open lower network ports on kube-apiserver binary
  command:
    setcap CAP_NET_BIND_SERVICE=+eip "{{ k8s_kube_binaries_download_path }}/kube-apiserver"
  when: "not 'cap_net_bind_service+eip' in kube_apiserver_capabilities.stdout"


- name: Link the binaries to a system location
  file:
    src="{{ k8s_kube_binaries_download_path }}/{{ item }}"
    dest="/usr/sbin/{{ item }}"
    owner=root
    group=root
    state=link
  with_items: "{{ k8s_kube_binaries }}"

- name: Create the config.conf file
  template:
    src=config.conf.j2
    dest="{{ k8s_folder }}/config.conf"
    owner=root
    group=k8s
    mode=0640

- name: Create the kubeconfig file
  template:
    src=kubeconfig.j2
    dest="{{ k8s_folder }}/kubeconfig"
    owner=root
    group=k8s
    mode=0640